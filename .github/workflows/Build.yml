on:
  push:
  pull_request:

name: Build

jobs:
  start-runner:
    name: Start self-hosted ECS runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ecs-runner.outputs.label }}
      ecs-instance-id: ${{ steps.start-ecs-runner.outputs.ecs-instance-id }}
    steps:
      - uses: actions/checkout@v2
      - name: Start ECS runner
        id: start-ecs-runner
        uses: messense/huaweicloud-github-runner@main
        with:
          mode: start
          count: 2
          github-token: ${{ secrets.GH_PAT }}
          huawei-cloud-ak: ${{ secrets.HUAWEI_CLOUD_AK }}
          huawei-cloud-sk: ${{ secrets.HUAWEI_CLOUD_SK }}
          project-id: ${{ secrets.PROJECT_ID }}
          availability-zone: ap-southeast-1b
          ecs-image-id: 3021e45a-5c5b-47ae-920d-2a240d3f26d9
          ecs-instance-type: kc1.large.2
          vpc-id: ${{ secrets.VPC_ID }}
          subnet-id: ${{ secrets.SUBNET_ID }}
          security-group-id: ${{ secrets.SECURITY_GROUP_ID }}

  build:
    name: Build - ${{ matrix.os.arch }} - ${{ matrix.platform.manylinux }}_${{ matrix.platform.arch }}
    needs: start-runner
    runs-on: ${{ matrix.os.label }}
    strategy:
      matrix:
        os:
          - arch: 'amd64'
            label: ['ubuntu-latest']
          - arch: 'arm64'
            label: ['self-hosted', 'huaweicloud']
        platform: [
          { arch: "i686", manylinux: "manylinux2014" },
          { arch: "i686", manylinux: "manylinux_2_24" },
        ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.platform.arch }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform.arch }}-buildx-
      - name: Clean Docker cache
        if: "contains(github.event.head_commit.message, '[clean cache]')"
        continue-on-error: true
        run: |
          rm -rf /tmp/.buildx-cache
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          platforms: linux/${{ matrix.os.arch }}
          context: ${{ matrix.platform.manylinux }}/${{ matrix.platform.arch }}
          file: ${{ matrix.platform.manylinux }}/${{ matrix.platform.arch }}/Dockerfile
          tags: messense/${{ matrix.platform.manylinux }}-cross:${{ matrix.platform.arch }}-${{ matrix.os.arch }}
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          # Temp fix
          # https://github.com/docker/build-push-action/issues/252
          # https://github.com/moby/buildkit/issues/1896
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Build and push multiarch image
        if: github.ref == 'refs/heads/master'
        env:
          ARCH: ${{ matrix.platform.arch }}
          NAME: ${{ matrix.platform.manylinux }}
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push messense/$NAME-cross:$ARCH-${{ matrix.os.arch }}

          echo "image: messense/$NAME-cross:$ARCH
          manifests:
            - image: messense/$NAME-cross:$ARCH-amd64
              platform:
                architecture: amd64
                os: linux
            - image: messense/$NAME-cross:$ARCH-arm64
              platform:
                architecture: arm64
                os: linux
          " > manifest.yaml

          curl -sqL -o manifest-tool https://github.com/estesp/manifest-tool/releases/download/v1.0.3/manifest-tool-linux-${{ matrix.os.arch }}
          chmod +x manifest-tool
          ./manifest-tool push from-spec manifest.yaml
      - name: Alias armv7l to armv7
        if: matrix.platform.arch == 'armv7l' && github.ref == 'refs/heads/master'
        env:
          NAME: ${{ matrix.platform.manylinux }}
        run: |
          echo "image: messense/$NAME-cross:armv7
          manifests:
            - image: messense/$NAME-cross:armv7l-amd64
              platform:
                architecture: amd64
                os: linux
            - image: messense/$NAME-cross:armv7l-arm64
              platform:
                architecture: arm64
                os: linux
          " > manifest.yaml

          curl -sqL -o manifest-tool https://github.com/estesp/manifest-tool/releases/download/v1.0.3/manifest-tool-linux-${{ matrix.os.arch }}
          chmod +x manifest-tool
          ./manifest-tool push from-spec manifest.yaml

  stop-runner:
    name: Stop self-hosted ECS runner
    needs: [start-runner, build]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v2
      - name: Stop ECS runner
        if: ${{ needs.start-runner.outputs.ecs-instance-id }}
        uses: messense/huaweicloud-github-runner@main
        with:
          mode: stop
          github-token: ${{ secrets.GH_PAT }}
          huawei-cloud-ak: ${{ secrets.HUAWEI_CLOUD_AK }}
          huawei-cloud-sk: ${{ secrets.HUAWEI_CLOUD_SK }}
          project-id: ${{ secrets.PROJECT_ID }}
          availability-zone: ap-southeast-1b
          label: ${{ needs.start-runner.outputs.label }}
          ecs-instance-id: ${{ needs.start-runner.outputs.ecs-instance-id }}
